@using Foundation.AspNetCore.Features.CmsPages.Blog.BlogListPage.ViewModels
@using Foundation.AspNetCore.Features.Shared.SelectionFactories

@model BlogListPageViewModel

@if (string.IsNullOrEmpty(Model.CurrentContent.Template))
{
    Model.CurrentContent.Template = TemplateSelections.Grid;
}

@switch (Model.CurrentContent.Template)
{
    case TemplateSelections.Grid:
        @await Html.PartialAsync("Template/_GridTemplate.cshtml", Model)
        break;

    case TemplateSelections.Card:
        @await Html.PartialAsync("Template/_CardTemplate.cshtml", Model)
        break;

    case TemplateSelections.Insight:
        @await Html.PartialAsync("Template/_InsightTemplate.cshtml", Model)
        break;

    case TemplateSelections.ImageLeft:
        @await Html.PartialAsync("Template/_ImageLeftTemplate.cshtml", Model)
        break;

    case TemplateSelections.ImageTop:
        @await Html.PartialAsync("Template/_ImageTopTemplate.cshtml", Model)
        break;

    case TemplateSelections.NoImage:
        @await Html.PartialAsync("Template/_NoImageTemplate.cshtml", Model)
        break;

    case TemplateSelections.Highlight:
        if (Model.Blogs != null && Model.Blogs.Any())
        {
            var flip = false;
            foreach (var blog in Model.Blogs)
            {
                <partial href="~/View/Template/_HighLightTemplate" model="@blog" view-data="@(new ViewDataDictionary(ViewData) { { "Flip", flip } })" />

                if (!blog.CurrentContent.Highlight)
                {
                    flip = !flip;
                }
            }
        }
        break;
}